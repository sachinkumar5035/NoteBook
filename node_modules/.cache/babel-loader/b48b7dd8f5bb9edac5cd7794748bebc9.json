{"ast":null,"code":"import _asyncToGenerator from \"/Users/sachinkumar/Desktop/projects/react/inotebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sachinkumar/Desktop/projects/react/inotebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/sachinkumar/Desktop/projects/react/inotebook/src/Context/notes/NoteState.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport NoteContext from \"./noteContext\";\nimport React, { useState } from \"react\";\nimport { json } from \"react-router-dom\";\nvar NoteState = function NoteState(props) {\n  // creates a state s1 which will be accessible to all the children \n  // const s1={\n  //     \"name\":\"sKumar\",\n  //     \"class\":\"7A\"\n  // }\n\n  // const [state,setState] = useState(s1);\n\n  // const update=()=>{\n  //     setTimeout(()=>{\n  //         setState({\n  //             \"name\" : \"mrKumar\",\n  //             \"class\" : \"10A\"\n  //         })\n  //     },1500);\n  // }\n\n  var host = \"http://localhost:4000\"; // on this address mongodb is running\n  // sample notes for a particular user\n  var notesInitial = [{\n    \"_id\": \"639c6bb374b02a293359bb43\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-16T12:59:31.176Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"639c6bb374b02a293359bb45\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-16T12:59:31.336Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"639e137fae1e66658ea29703\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-17T19:07:43.782Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"639e1387ae1e66658ea29705\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes1\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-17T19:07:51.136Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"639e138bae1e66658ea29707\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes2\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-17T19:07:55.194Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"639e138eae1e66658ea29709\",\n    \"user\": \"639b63020ec8f22e7124944b\",\n    \"title\": \"good morning notes3\",\n    \"description\": \"a note for a good morning\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-12-17T19:07:58.833Z\",\n    \"__v\": 0\n  }];\n  var _useState = useState(notesInitial),\n    _useState2 = _slicedToArray(_useState, 2),\n    notes = _useState2[0],\n    setNote = _useState2[1]; // add a note\n  var addNote = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(title, description, tag) {\n      var response, note;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/api/notes/fetchallnotes\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM5YjYzMDIwZWM4ZjIyZTcxMjQ5NDRiIn0sImlhdCI6MTY3MTE4MDgyMH0.kzMTcYTrQrcEdTBBCJCmhUHPGN86dX_sgluZoCG_yQ8\"\n                },\n                body: JSON.stringify({\n                  title: title,\n                  description: description,\n                  tag: tag\n                })\n              });\n            case 2:\n              response = _context.sent;\n              //const json = response.json({title,description,tag});\n\n              console.log(\"Adding a new note \");\n              note = {\n                \"_id\": \"639c6bb374b02a293asasdasdas359bb43\",\n                // this key will always be unique\n                \"user\": \"639b63020ec8f22e7124944b\",\n                \"title\": title,\n                \"description\": description,\n                \"tag\": tag,\n                \"date\": \"2022-12-16T12:59:31.176Z\",\n                \"__v\": 0\n              };\n              setNote(notes.concat(note));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function addNote(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // delete a note\n  var deleteNote = function deleteNote(id) {\n    // id is require to delete a note\n    // API call \n    console.log(\"deleting a note with id: \" + id);\n    var newNote = notes.filter(function (note) {\n      return note._id !== id;\n    });\n    setNote(newNote);\n  };\n\n  // edit a note \n  var editNote = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id, title, description, tag) {\n      var response, index, element;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"\".concat(host, \"/api/notes/updatenote/\").concat(id), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM5YjYzMDIwZWM4ZjIyZTcxMjQ5NDRiIn0sImlhdCI6MTY3MTE4MDgyMH0.kzMTcYTrQrcEdTBBCJCmhUHPGN86dX_sgluZoCG_yQ8\"\n                },\n                body: JSON.stringify({\n                  title: title,\n                  description: description,\n                  tag: tag\n                })\n              });\n            case 2:\n              response = _context2.sent;\n              // return response.json();\n\n              for (index = 0; index < notes.length; index++) {\n                element = notes[index];\n                if (element._id === id) {\n                  element.title = title;\n                  element.description = description;\n                  element.tag = tag;\n                }\n              }\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function editNote(_x4, _x5, _x6, _x7) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return (\n    /*#__PURE__*/\n    // state will be available to all the chil\n    // <NoteContext.Provider value={{state,update}}> \n    React.createElement(NoteContext.Provider, {\n      value: {\n        notes: notes,\n        addNote: addNote,\n        deleteNote: deleteNote,\n        editNote: editNote\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, props.children)\n  );\n};\nexport default NoteState;","map":{"version":3,"names":["NoteContext","React","useState","json","NoteState","props","host","notesInitial","notes","setNote","addNote","title","description","tag","fetch","method","headers","body","JSON","stringify","response","console","log","note","concat","deleteNote","id","newNote","filter","_id","editNote","index","length","element","children"],"sources":["/Users/sachinkumar/Desktop/projects/react/inotebook/src/Context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport React, { useState } from \"react\";\nimport { json } from \"react-router-dom\";\n\n\nconst NoteState = (props) => {\n  // creates a state s1 which will be accessible to all the children \n  // const s1={\n  //     \"name\":\"sKumar\",\n  //     \"class\":\"7A\"\n  // }\n\n  // const [state,setState] = useState(s1);\n\n  // const update=()=>{\n  //     setTimeout(()=>{\n  //         setState({\n  //             \"name\" : \"mrKumar\",\n  //             \"class\" : \"10A\"\n  //         })\n  //     },1500);\n  // }\n\n  const host = \"http://localhost:4000\"; // on this address mongodb is running\n  // sample notes for a particular user\n  const notesInitial = [\n    {\n      \"_id\": \"639c6bb374b02a293359bb43\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-16T12:59:31.176Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"639c6bb374b02a293359bb45\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-16T12:59:31.336Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"639e137fae1e66658ea29703\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-17T19:07:43.782Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"639e1387ae1e66658ea29705\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes1\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-17T19:07:51.136Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"639e138bae1e66658ea29707\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes2\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-17T19:07:55.194Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"639e138eae1e66658ea29709\",\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": \"good morning notes3\",\n      \"description\": \"a note for a good morning\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-12-17T19:07:58.833Z\",\n      \"__v\": 0\n    }\n  ];\n\n  const [notes, setNote] = useState(notesInitial);\n\n  // add a note\n  const addNote = async (title, description, tag) => {\n    // API call\n    //const URL = host + '/api/notes/fetchallnotes'; // creating end point for the API for addNote\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM5YjYzMDIwZWM4ZjIyZTcxMjQ5NDRiIn0sImlhdCI6MTY3MTE4MDgyMH0.kzMTcYTrQrcEdTBBCJCmhUHPGN86dX_sgluZoCG_yQ8\"\n      },\n      body: JSON.stringify({title,description,tag})\n    });\n    //const json = response.json({title,description,tag});\n    \n    console.log(\"Adding a new note \");\n    const note = {\n      \"_id\": \"639c6bb374b02a293asasdasdas359bb43\", // this key will always be unique\n      \"user\": \"639b63020ec8f22e7124944b\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-12-16T12:59:31.176Z\",\n      \"__v\": 0\n    }\n    setNote(notes.concat(note))\n  }\n\n  // delete a note\n  const deleteNote = (id) => { // id is require to delete a note\n    // API call \n    console.log(\"deleting a note with id: \" + id);\n    const newNote = notes.filter((note) => { return note._id !== id });\n    setNote(newNote);\n  }\n\n  // edit a note \n  const editNote = async (id, title, description, tag) => { // id,title,description and tag is require to edit a note\n    // API call\n    //const URL = host + '/api/notes/updatenote/' + id; // creating end point for the API for editNote\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM5YjYzMDIwZWM4ZjIyZTcxMjQ5NDRiIn0sImlhdCI6MTY3MTE4MDgyMH0.kzMTcYTrQrcEdTBBCJCmhUHPGN86dX_sgluZoCG_yQ8\"\n      },\n      body: JSON.stringify({title,description,tag})\n    });\n    // return response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  }\n\n  return (\n    // state will be available to all the chil\n    // <NoteContext.Provider value={{state,update}}> \n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\n\nexport default NoteState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}