{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/sachinkumar/Desktop/projects/react/inotebook/src/component/Notes.js\";\nimport React, { useContext, useEffect } from 'react';\nimport noteContext from \"../Context/notes/noteContext\";\nimport AddNote from './AddNote';\nimport Noteitem from './Noteitem';\nvar Notes = function Notes() {\n  var context = useContext(noteContext);\n  var notes = context.notes,\n    getNotes = context.getNotes;\n  useEffect(function () {\n    getNotes();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddNote, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Your Note\"), notes.map(function (note) {\n    // all notes title will be shown\n    // returning Noteitem by passing note as prpos and key as _id for a note \n    return /*#__PURE__*/React.createElement(Noteitem, {\n      key: note._id,\n      updateNote: updateNote,\n      note: note,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }\n    });\n  })));\n};\nexport default Notes;","map":{"version":3,"names":["React","useContext","useEffect","noteContext","AddNote","Noteitem","Notes","context","notes","getNotes","map","note","_id","updateNote"],"sources":["/Users/sachinkumar/Desktop/projects/react/inotebook/src/component/Notes.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport noteContext from \"../Context/notes/noteContext\";\nimport AddNote from './AddNote';\nimport Noteitem from './Noteitem';\n\n\n\nconst Notes = () => {\n    const context = useContext(noteContext);\n    const { notes, getNotes } = context;\n\n    useEffect(()=>{\n        getNotes();\n    },[]);\n\n\n    return (\n        <>\n            <AddNote />\n            <div className=\"row my-3\">\n                <h2>Your Note</h2>\n                {notes.map((note) => { // all notes title will be shown\n                    // returning Noteitem by passing note as prpos and key as _id for a note \n                    return <Noteitem key={note._id} updateNote={updateNote} note={note} />\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Notes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAIjC,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAChB,IAAMC,OAAO,GAAGN,UAAU,CAACE,WAAW,CAAC;EAAC,IAChCK,KAAK,GAAeD,OAAO,CAA3BC,KAAK;IAAEC,QAAQ,GAAKF,OAAO,CAApBE,QAAQ;EAEvBP,SAAS,CAAC,YAAI;IACVO,QAAQ,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAGL,oBACI,uDACI,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACX;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAkB,EACjBD,KAAK,CAACE,GAAG,CAAC,UAACC,IAAI,EAAK;IAAE;IACnB;IACA,oBAAO,oBAAC,QAAQ;MAAC,GAAG,EAAEA,IAAI,CAACC,GAAI;MAAC,UAAU,EAAEC,UAAW;MAAC,IAAI,EAAEF,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAC1E,CAAC,CAAC,CACA,CACP;AAEX,CAAC;AAED,eAAeL,KAAK"},"metadata":{},"sourceType":"module"}